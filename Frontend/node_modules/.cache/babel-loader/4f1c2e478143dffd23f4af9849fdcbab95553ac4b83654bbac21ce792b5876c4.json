{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row\"\n};\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = {\n  class: \"card-header\"\n};\nconst _hoisted_4 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_5 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_8 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    style: {\n      \"font-family\": \"'Roboto', sans-serif\"\n    }\n  }, \"Attendance of employees \", -1 /* HOISTED */)), _createCommentVNode(\" Search Bar \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"Search employees by name or ID...\",\n    style: {\n      \"width\": \"67em\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _cache[4] || (_cache[4] = _createTextVNode()), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createTextVNode()), _cache[7] || (_cache[7] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Loop through filtered employees and create a card for each \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredEmployees, employee => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-md-6 mb-4\",\n      key: employee.employeeId\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"strong\", null, _toDisplayString(employee.name), 1 /* TEXT */), _createTextVNode(\" (Employee ID: \" + _toDisplayString(employee.employeeId) + \") \", 1 /* TEXT */)]), _createElementVNode(\"ul\", _hoisted_4, [_createCommentVNode(\" Present Dates \"), _createElementVNode(\"li\", _hoisted_5, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Present dates:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(employee.attendance, attendance => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: attendance.date\n      }, [attendance.status === 'Present' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(attendance.date), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Absent Dates \"), _createElementVNode(\"li\", _hoisted_7, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Absent dates:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(employee.attendance, attendance => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: attendance.date\n      }, [attendance.status === 'Absent' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString(attendance.date), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","style","_createCommentVNode","type","_cache","$event","$data","searchQuery","placeholder","_createTextVNode","_hoisted_1","_Fragment","_renderList","$options","filteredEmployees","employee","employeeId","_hoisted_2","_hoisted_3","_toDisplayString","name","_hoisted_4","_hoisted_5","attendance","date","status","_hoisted_6","_hoisted_7","_hoisted_8"],"sources":["C:\\Users\\Students\\Desktop\\clone\\front-end\\Module-2-Core-Project\\Frontend\\src\\components\\attendenceOfEmployees.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2 style=\"font-family: 'Roboto', sans-serif;\">Attendance of employees   </h2>\r\n  \r\n      <!-- Search Bar -->\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Search employees by name or ID...\"\r\n        style=\"width: 67em;\"\r\n      /> <br> <br>\r\n  \r\n      <div class=\"row\">\r\n        <!-- Loop through filtered employees and create a card for each -->\r\n        <div\r\n          class=\"col-md-6 mb-4\"\r\n          v-for=\"employee in filteredEmployees\"\r\n          :key=\"employee.employeeId\"\r\n        >\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <strong>{{ employee.name }}</strong> (Employee ID: {{ employee.employeeId }})\r\n            </div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <!-- Present Dates -->\r\n              <li class=\"list-group-item\">\r\n                <strong>Present dates:</strong>\r\n                <div v-for=\"attendance in employee.attendance\" :key=\"attendance.date\">\r\n                  <div v-if=\"attendance.status === 'Present'\">\r\n                    {{ attendance.date }}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <!-- Absent Dates -->\r\n              <li class=\"list-group-item\">\r\n                <strong>Absent dates:</strong>\r\n                <div v-for=\"attendance in employee.attendance\" :key=\"attendance.date\">\r\n                  <div v-if=\"attendance.status === 'Absent'\">\r\n                    {{ attendance.date }}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: [\"employees\"],\r\n    data() {\r\n      return {\r\n        searchQuery: \"\", // Holds the users search input\r\n      };\r\n    },\r\n    computed: {\r\n      // Filter employees based on the search query\r\n      filteredEmployees() {\r\n        const query = this.searchQuery.toLowerCase();\r\n        return this.employees.filter(\r\n          (employee) =>\r\n            employee.name.toLowerCase().includes(query) ||\r\n            employee.employeeId.toString().includes(query)\r\n        );\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n/* General layout */\r\nh2 {\r\n  font-size: 2rem;\r\n  color: #333;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  width: 70%;\r\n  padding: 10px;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin: 0 auto;\r\n  display: block;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus {\r\n  border-color: #007bff;\r\n  outline: none;\r\n  box-shadow: 0 0 4px rgba(0, 123, 255, 0.5);\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  margin-top: 20px;\r\n}\r\n\r\n.card {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.card-header {\r\n  background-color: #f7f7f7;\r\n  padding: 15px;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.card-header strong {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.list-group-item {\r\n  padding: 12px;\r\n  font-size: 1rem;\r\n  color: #555;\r\n  border-bottom: 1px solid #f1f1f1;\r\n}\r\n\r\n.list-group-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.list-group-item strong {\r\n  color: #333;\r\n  font-weight: bold;\r\n}\r\n\r\n.list-group-item div {\r\n  margin-top: 5px;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n/* Styling for the \"Present\" dates */\r\n.list-group-item div[v-if=\"attendance.status === 'Present'\"] {\r\n  color: #28a745; /* Green for present dates */\r\n}\r\n\r\n/* Styling for the \"Absent\" dates */\r\n.list-group-item div[v-if=\"attendance.status === 'Absent'\"] {\r\n  color: #dc3545; /* Red for absent dates */\r\n}\r\n\r\n.mb-4 {\r\n  margin-bottom: 20px !important;\r\n}\r\n</style>\r\n"],"mappings":";;EAYWA,KAAK,EAAC;AAAK;;EAOPA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAa;;EAGpBA,KAAK,EAAC;AAA6B;;EAEjCA,KAAK,EAAC;AAAiB;;EAzBzCC,GAAA;AAAA;;EAkCkBD,KAAK,EAAC;AAAiB;;EAlCzCC,GAAA;AAAA;;uBACIC,mBAAA,CAgDM,c,0BA/CJC,mBAAA,CAA8E;IAA1EC,KAA0C,EAA1C;MAAA;IAAA;EAA0C,GAAC,0BAA0B,sBAEzEC,mBAAA,gBAAmB,E,gBACnBF,mBAAA,CAKE;IAJAG,IAAI,EAAC,MAAM;IANnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOiBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,WAAW,EAAC,mCAAmC;IAC/CP,KAAoB,EAApB;MAAA;IAAA;iDAFSK,KAAA,CAAAC,WAAW,E,6BAP5BE,gBAAA,K,0BAUST,mBAAA,CAAI,sC,0BAVbS,gBAAA,K,0BAUcT,mBAAA,CAAI,sCAEZA,mBAAA,CAiCM,OAjCNU,UAiCM,GAhCJR,mBAAA,gEAAmE,G,kBACnEH,mBAAA,CA8BMY,SAAA,QA5CdC,WAAA,CAgB6BC,QAAA,CAAAC,iBAAiB,EAA7BC,QAAQ;yBAFjBhB,mBAAA,CA8BM;MA7BJF,KAAK,EAAC,eAAe;MAEpBC,GAAG,EAAEiB,QAAQ,CAACC;QAEfhB,mBAAA,CAwBM,OAxBNiB,UAwBM,GAvBJjB,mBAAA,CAEM,OAFNkB,UAEM,GADJlB,mBAAA,CAAoC,gBAAAmB,gBAAA,CAAzBJ,QAAQ,CAACK,IAAI,kBArBtCX,gBAAA,CAqBkD,iBAAe,GAAAU,gBAAA,CAAGJ,QAAQ,CAACC,UAAU,IAAG,IAC9E,gB,GACAhB,mBAAA,CAmBK,MAnBLqB,UAmBK,GAlBHnB,mBAAA,mBAAsB,EACtBF,mBAAA,CAOK,MAPLsB,UAOK,G,0BANHtB,mBAAA,CAA+B,gBAAvB,gBAAc,uB,kBACtBD,mBAAA,CAIMY,SAAA,QA/BtBC,WAAA,CA2B0CG,QAAQ,CAACQ,UAAU,EAAjCA,UAAU;2BAAtBxB,mBAAA,CAIM;QAJ0CD,GAAG,EAAEyB,UAAU,CAACC;UACnDD,UAAU,CAACE,MAAM,kB,cAA5B1B,mBAAA,CAEM,OA9BxB2B,UAAA,EAAAP,gBAAA,CA6BuBI,UAAU,CAACC,IAAI,oBA7BtCtB,mBAAA,e;sCAiCcA,mBAAA,kBAAqB,EACrBF,mBAAA,CAOK,MAPL2B,UAOK,G,0BANH3B,mBAAA,CAA8B,gBAAtB,eAAa,uB,kBACrBD,mBAAA,CAIMY,SAAA,QAxCtBC,WAAA,CAoC0CG,QAAQ,CAACQ,UAAU,EAAjCA,UAAU;2BAAtBxB,mBAAA,CAIM;QAJ0CD,GAAG,EAAEyB,UAAU,CAACC;UACnDD,UAAU,CAACE,MAAM,iB,cAA5B1B,mBAAA,CAEM,OAvCxB6B,UAAA,EAAAT,gBAAA,CAsCuBI,UAAU,CAACC,IAAI,oBAtCtCtB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}