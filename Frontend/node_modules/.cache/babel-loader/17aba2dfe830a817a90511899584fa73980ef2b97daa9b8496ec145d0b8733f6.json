{"ast":null,"code":"export default {\n  data() {\n    return {\n      // Define the dates for the calendar (can adjust this to any range of dates)\n      dates: [\"2024-11-01\", \"2024-11-02\", \"2024-11-03\", \"2024-11-04\", \"2024-11-05\", \"2024-11-06\", \"2024-11-07\", \"2024-11-08\", \"2024-11-09\", \"2024-11-10\", \"2024-11-11\", \"2024-11-12\", \"2024-11-13\", \"2024-11-14\", \"2024-11-15\", \"2024-11-16\", \"2024-11-17\", \"2024-11-18\", \"2024-11-19\", \"2024-11-20\", \"2024-11-21\", \"2024-11-22\", \"2024-11-23\", \"2024-11-24\", \"2024-11-25\", \"2024-11-26\", \"2024-11-27\", \"2024-11-28\", \"2024-11-29\", \"2024-11-30\"],\n      showModal: false,\n      selectedDate: \"\",\n      workingEmployees: [],\n      employeeNames: [\"Sibongile Nkosi\", \"Lungile Moyo\", \"Thabo Molefe\", \"Keshav Naidoo\", \"Zanele Khumalo\", \"Sipho Zulu\", \"Naledi Moeketsi\", \"Farai Gumbo\", \"Karabo Dlamini\", \"Fatima Patel\"]\n    };\n  },\n  methods: {\n    // Function to get the day of the week for a given date\n    getDayOfWeek(date) {\n      const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      const day = new Date(date).getDay(); // Get the day index (0-6)\n      return daysOfWeek[day];\n    },\n    // Function to open the modal and display the working employees for the selected date\n    openModal(date) {\n      this.selectedDate = date;\n      this.workingEmployees = this.getWorkingEmployees();\n      this.showModal = true;\n    },\n    // Function to randomly select employees who will be working\n    getWorkingEmployees() {\n      const workingCount = Math.floor(Math.random() * 5) + 3; // Random number of working employees between 3 and 7\n      const shuffled = this.employeeNames.sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, workingCount);\n    },\n    // Function to close the modal\n    closeModal() {\n      this.showModal = false;\n    }\n  }\n};","map":{"version":3,"names":["data","dates","showModal","selectedDate","workingEmployees","employeeNames","methods","getDayOfWeek","date","daysOfWeek","day","Date","getDay","openModal","getWorkingEmployees","workingCount","Math","floor","random","shuffled","sort","slice","closeModal"],"sources":["C:\\Users\\Students\\Desktop\\clone\\front-end\\Module-2-Core-Project\\Frontend\\src\\components\\CalenderComp.vue"],"sourcesContent":["<template>\r\n    <div class=\"calendar-container\">\r\n      <h2 class=\"text-center\">Employee Attendance Calendar</h2>\r\n      <div class=\"calendar\">\r\n        <!-- Generate the calendar days -->\r\n        <div v-for=\"date in dates\" :key=\"date\" class=\"calendar-card\" @click=\"openModal(date)\">\r\n          <div class=\"calendar-date\">{{ date }}</div>\r\n          <div class=\"calendar-day\">{{ getDayOfWeek(date) }}</div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Modal -->\r\n      <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\r\n        <div class=\"modal-content\" @click.stop>\r\n          <h3>Employees Working on {{ selectedDate }}</h3>\r\n          <ul>\r\n            <li v-for=\"employee in workingEmployees\" :key=\"employee\">{{ employee }}</li>\r\n          </ul>\r\n          <button class=\"close-btn\" @click=\"closeModal\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        // Define the dates for the calendar (can adjust this to any range of dates)\r\n        dates: [\r\n          \"2024-11-01\", \"2024-11-02\", \"2024-11-03\", \"2024-11-04\", \"2024-11-05\", \r\n          \"2024-11-06\", \"2024-11-07\", \"2024-11-08\", \"2024-11-09\", \"2024-11-10\",\r\n          \"2024-11-11\", \"2024-11-12\", \"2024-11-13\", \"2024-11-14\", \"2024-11-15\", \r\n          \"2024-11-16\", \"2024-11-17\", \"2024-11-18\", \"2024-11-19\", \"2024-11-20\",\r\n          \"2024-11-21\", \"2024-11-22\", \"2024-11-23\", \"2024-11-24\", \"2024-11-25\",\r\n          \"2024-11-26\", \"2024-11-27\", \"2024-11-28\", \"2024-11-29\", \"2024-11-30\"\r\n        ],\r\n        showModal: false,\r\n        selectedDate: \"\",\r\n        workingEmployees: [],\r\n        employeeNames: [\r\n          \"Sibongile Nkosi\", \"Lungile Moyo\", \"Thabo Molefe\", \"Keshav Naidoo\", \r\n          \"Zanele Khumalo\", \"Sipho Zulu\", \"Naledi Moeketsi\", \"Farai Gumbo\", \r\n          \"Karabo Dlamini\", \"Fatima Patel\"\r\n        ]\r\n      };\r\n    },\r\n    methods: {\r\n      // Function to get the day of the week for a given date\r\n      getDayOfWeek(date) {\r\n        const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        const day = new Date(date).getDay(); // Get the day index (0-6)\r\n        return daysOfWeek[day];\r\n      },\r\n  \r\n      // Function to open the modal and display the working employees for the selected date\r\n      openModal(date) {\r\n        this.selectedDate = date;\r\n        this.workingEmployees = this.getWorkingEmployees();\r\n        this.showModal = true;\r\n      },\r\n  \r\n      // Function to randomly select employees who will be working\r\n      getWorkingEmployees() {\r\n        const workingCount = Math.floor(Math.random() * 5) + 3; // Random number of working employees between 3 and 7\r\n        const shuffled = this.employeeNames.sort(() => 0.5 - Math.random());\r\n        return shuffled.slice(0, workingCount);\r\n      },\r\n  \r\n      // Function to close the modal\r\n      closeModal() {\r\n        this.showModal = false;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .calendar-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .text-center {\r\n    text-align: center;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .calendar {\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr); /* 8 items per row */\r\n    gap: 15px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .calendar-card {\r\n    background-color: #f0f0f0;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .calendar-date {\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .calendar-day {\r\n    margin-top: 10px;\r\n    font-size: 0.9rem;\r\n    color: #007bff;\r\n  }\r\n  \r\n  .calendar-card:hover {\r\n    background-color: #e0e0e0;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  .modal-content {\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    width: 300px;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding-left: 0;\r\n  }\r\n  \r\n  ul li {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .close-btn {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .close-btn:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAyBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,KAAK,EAAE,CACL,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAW,CACpE;MACDC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE,EAAE;MAChBC,gBAAgB,EAAE,EAAE;MACpBC,aAAa,EAAE,CACb,iBAAiB,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAClE,gBAAgB,EAAE,YAAY,EAAE,iBAAiB,EAAE,aAAa,EAChE,gBAAgB,EAAE,cAAa;IAEnC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,YAAYA,CAACC,IAAI,EAAE;MACjB,MAAMC,UAAS,GAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;MACjG,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAACH,IAAI,CAAC,CAACI,MAAM,CAAC,CAAC,EAAE;MACrC,OAAOH,UAAU,CAACC,GAAG,CAAC;IACxB,CAAC;IAED;IACAG,SAASA,CAACL,IAAI,EAAE;MACd,IAAI,CAACL,YAAW,GAAIK,IAAI;MACxB,IAAI,CAACJ,gBAAe,GAAI,IAAI,CAACU,mBAAmB,CAAC,CAAC;MAClD,IAAI,CAACZ,SAAQ,GAAI,IAAI;IACvB,CAAC;IAED;IACAY,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,YAAW,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;MACxD,MAAMC,QAAO,GAAI,IAAI,CAACd,aAAa,CAACe,IAAI,CAAC,MAAM,GAAE,GAAIJ,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;MACnE,OAAOC,QAAQ,CAACE,KAAK,CAAC,CAAC,EAAEN,YAAY,CAAC;IACxC,CAAC;IAED;IACAO,UAAUA,CAAA,EAAG;MACX,IAAI,CAACpB,SAAQ,GAAI,KAAK;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}