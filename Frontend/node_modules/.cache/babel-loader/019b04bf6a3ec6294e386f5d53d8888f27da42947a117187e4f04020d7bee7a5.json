{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar-container\"\n};\nconst _hoisted_2 = {\n  class: \"calendar\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"calendar-date\"\n};\nconst _hoisted_5 = {\n  class: \"calendar-day\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"text-center\"\n  }, \"Employee Attendance Calendar\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Generate the calendar days \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dates, date => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: date,\n      class: \"calendar-card\",\n      onClick: $event => $options.openModal(date)\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(date), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($options.getDayOfWeek(date)), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Modal \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal-overlay\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modal-content\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"h3\", null, \"Employees Working on \" + _toDisplayString($data.selectedDate), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workingEmployees, employee => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: employee\n    }, _toDisplayString(employee), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_Fragment","_renderList","$data","dates","date","key","onClick","$event","$options","openModal","_hoisted_4","_toDisplayString","_hoisted_5","getDayOfWeek","_hoisted_3","showModal","_cache","args","closeModal","_withModifiers","selectedDate","workingEmployees","employee"],"sources":["C:\\Users\\Students\\Desktop\\clone\\front-end\\Module-2-Core-Project\\Frontend\\src\\components\\CalenderComp.vue"],"sourcesContent":["<template>\r\n    <div class=\"calendar-container\">\r\n      <h2 class=\"text-center\">Employee Attendance Calendar</h2>\r\n      <div class=\"calendar\">\r\n        <!-- Generate the calendar days -->\r\n        <div v-for=\"date in dates\" :key=\"date\" class=\"calendar-card\" @click=\"openModal(date)\">\r\n          <div class=\"calendar-date\">{{ date }}</div>\r\n          <div class=\"calendar-day\">{{ getDayOfWeek(date) }}</div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Modal -->\r\n      <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\r\n        <div class=\"modal-content\" @click.stop>\r\n          <h3>Employees Working on {{ selectedDate }}</h3>\r\n          <ul>\r\n            <li v-for=\"employee in workingEmployees\" :key=\"employee\">{{ employee }}</li>\r\n          </ul>\r\n          <button class=\"close-btn\" @click=\"closeModal\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        // Define the dates for the calendar (can adjust this to any range of dates)\r\n        dates: [\r\n          \"2024-11-01\", \"2024-11-02\", \"2024-11-03\", \"2024-11-04\", \"2024-11-05\", \r\n          \"2024-11-06\", \"2024-11-07\", \"2024-11-08\", \"2024-11-09\", \"2024-11-10\",\r\n          \"2024-11-11\", \"2024-11-12\", \"2024-11-13\", \"2024-11-14\", \"2024-11-15\", \r\n          \"2024-11-16\", \"2024-11-17\", \"2024-11-18\", \"2024-11-19\", \"2024-11-20\",\r\n          \"2024-11-21\", \"2024-11-22\", \"2024-11-23\", \"2024-11-24\", \"2024-11-25\",\r\n          \"2024-11-26\", \"2024-11-27\", \"2024-11-28\", \"2024-11-29\", \"2024-11-30\"\r\n        ],\r\n        showModal: false,\r\n        selectedDate: \"\",\r\n        workingEmployees: [],\r\n        employeeNames: [\r\n          \"Sibongile Nkosi\", \"Lungile Moyo\", \"Thabo Molefe\", \"Keshav Naidoo\", \r\n          \"Zanele Khumalo\", \"Sipho Zulu\", \"Naledi Moeketsi\", \"Farai Gumbo\", \r\n          \"Karabo Dlamini\", \"Fatima Patel\"\r\n        ]\r\n      };\r\n    },\r\n    methods: {\r\n      // Function to get the day of the week for a given date\r\n      getDayOfWeek(date) {\r\n        const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        const day = new Date(date).getDay(); // Get the day index (0-6)\r\n        return daysOfWeek[day];\r\n      },\r\n  \r\n      // Function to open the modal and display the working employees for the selected date\r\n      openModal(date) {\r\n        this.selectedDate = date;\r\n        this.workingEmployees = this.getWorkingEmployees();\r\n        this.showModal = true;\r\n      },\r\n  \r\n      // Function to randomly select employees who will be working\r\n      getWorkingEmployees() {\r\n        const workingCount = Math.floor(Math.random() * 5) + 3; // Random number of working employees between 3 and 7\r\n        const shuffled = this.employeeNames.sort(() => 0.5 - Math.random());\r\n        return shuffled.slice(0, workingCount);\r\n      },\r\n  \r\n      // Function to close the modal\r\n      closeModal() {\r\n        this.showModal = false;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .calendar-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .text-center {\r\n    text-align: center;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  \r\n  .calendar {\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr); /* 8 items per row */\r\n    gap: 15px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .calendar-card {\r\n    background-color: #f0f0f0;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .calendar-date {\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .calendar-day {\r\n    margin-top: 10px;\r\n    font-size: 0.9rem;\r\n    color: #007bff;\r\n  }\r\n  \r\n  .calendar-card:hover {\r\n    background-color: #e0e0e0;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  .modal-content {\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    width: 300px;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding-left: 0;\r\n  }\r\n  \r\n  ul li {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .close-btn {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .close-btn:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAoB;;EAExBA,KAAK,EAAC;AAAU;mBAH3B;;EAMeA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAc;;uBAN/BC,mBAAA,CAoBM,OApBNC,UAoBM,G,0BAnBJC,mBAAA,CAAyD;IAArDH,KAAK,EAAC;EAAa,GAAC,8BAA4B,sBACpDG,mBAAA,CAMM,OANNC,UAMM,GALJC,mBAAA,gCAAmC,G,kBACnCJ,mBAAA,CAGMK,SAAA,QARdC,WAAA,CAK4BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBT,mBAAA,CAGM;MAHsBU,GAAG,EAAED,IAAI;MAAEV,KAAK,EAAC,eAAe;MAAEY,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACL,IAAI;QACjFP,mBAAA,CAA2C,OAA3Ca,UAA2C,EAAAC,gBAAA,CAAbP,IAAI,kBAClCP,mBAAA,CAAwD,OAAxDe,UAAwD,EAAAD,gBAAA,CAA3BH,QAAA,CAAAK,YAAY,CAACT,IAAI,kB,iBAPxDU,UAAA;oCAWMf,mBAAA,WAAc,EACHG,KAAA,CAAAa,SAAS,I,cAApBpB,mBAAA,CAQM;IApBZU,GAAA;IAY4BX,KAAK,EAAC,eAAe;IAAEY,OAAK,EAAAU,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,QAAA,CAAAU,UAAA,IAAAV,QAAA,CAAAU,UAAA,IAAAD,IAAA,CAAU;MAC5DpB,mBAAA,CAMM;IANDH,KAAK,EAAC,eAAe;IAAEY,OAAK,EAAAU,MAAA,QAAAA,MAAA,MAbzCG,cAAA,CAamC,QAAW;MACpCtB,mBAAA,CAAgD,YAA5C,uBAAqB,GAAAc,gBAAA,CAAGT,KAAA,CAAAkB,YAAY,kBACxCvB,mBAAA,CAEK,c,kBADHF,mBAAA,CAA4EK,SAAA,QAhBxFC,WAAA,CAgBmCC,KAAA,CAAAmB,gBAAgB,EAA5BC,QAAQ;yBAAnB3B,mBAAA,CAA4E;MAAlCU,GAAG,EAAEiB;IAAQ,GAAAX,gBAAA,CAAKW,QAAQ;oCAEtEzB,mBAAA,CAA4D;IAApDH,KAAK,EAAC,WAAW;IAAEY,OAAK,EAAAU,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,QAAA,CAAAU,UAAA,IAAAV,QAAA,CAAAU,UAAA,IAAAD,IAAA,CAAU;KAAE,OAAK,E,OAlB7DlB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}