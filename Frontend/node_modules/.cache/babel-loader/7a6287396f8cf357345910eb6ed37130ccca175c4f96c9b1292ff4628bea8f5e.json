{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      employeeDataRecieved: [],\n      isAdding: false,\n      isEditing: false,\n      isReviewing: false,\n      editableEmployee: {},\n      selectedEmployee: {},\n      reviewText: \"\",\n      newEmployee: {\n        employeeId: null,\n        name: \"\",\n        position: \"\",\n        department: \"\",\n        salary: \"\",\n        employmentHistory: \"\",\n        contact: \"\"\n      }\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      const query = this.searchQuery.toLowerCase();\n      return this.employeeDataRecieved.filter(employee => employee.name.toLowerCase().includes(query) || employee.department.toLowerCase().includes(query));\n    }\n  },\n  methods: {\n    cloneData() {\n      this.employeeDataRecieved = this.$store.state.employeeInformation;\n    },\n    openAddModal() {\n      this.isAdding = true;\n    },\n    addEmployee() {\n      if (this.newEmployee.name && this.newEmployee.department) {\n        const newEmployee = {\n          ...this.newEmployee,\n          employeeId: Date.now()\n        };\n        this.employeeDataRecieved.push(newEmployee);\n        this.closeModal();\n        this.resetNewEmployee();\n      } else {\n        alert(\"Please fill in all required fields.\");\n      }\n    },\n    resetNewEmployee() {\n      this.newEmployee = {\n        employeeId: null,\n        name: \"\",\n        position: \"\",\n        department: \"\",\n        salary: \"\",\n        employmentHistory: \"\",\n        contact: \"\"\n      };\n    },\n    editEmployee(employee) {\n      this.editableEmployee = {\n        ...employee\n      };\n      this.isEditing = true;\n    },\n    removeEmployee(employeeId) {\n      this.employeeDataRecieved = this.employeeDataRecieved.filter(employee => employee.employeeId !== employeeId);\n    },\n    openReviewModal(employee) {\n      this.selectedEmployee = employee;\n      this.reviewText = \"\";\n      this.isReviewing = true;\n    },\n    submitReview() {\n      if (this.reviewText.trim()) {\n        alert(`Review submitted for ${this.selectedEmployee.name}: ${this.reviewText}`);\n        this.closeModal();\n      } else {\n        alert(\"Please write a review before submitting.\");\n      }\n    },\n    closeModal() {\n      this.isAdding = false;\n      this.isEditing = false;\n      this.isReviewing = false;\n      this.resetNewEmployee();\n    }\n  },\n  mounted() {\n    this.cloneData();\n  }\n};","map":{"version":3,"names":["data","searchQuery","employeeDataRecieved","isAdding","isEditing","isReviewing","editableEmployee","selectedEmployee","reviewText","newEmployee","employeeId","name","position","department","salary","employmentHistory","contact","computed","filteredEmployees","query","toLowerCase","filter","employee","includes","methods","cloneData","$store","state","employeeInformation","openAddModal","addEmployee","Date","now","push","closeModal","resetNewEmployee","alert","editEmployee","removeEmployee","openReviewModal","submitReview","trim","mounted"],"sources":["C:\\Users\\Students\\Desktop\\clone\\front-end\\Module-2-Core-Project\\Frontend\\src\\views\\EmployeeDataManagementView.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-dashboard\">\r\n    <!-- Search Bar -->\r\n    <input \r\n      type=\"text\" \r\n      v-model=\"searchQuery\" \r\n      class=\"search-bar\" \r\n      placeholder=\"Search by Name or Department...\" \r\n    />\r\n\r\n    <!-- Add employee btn -->\r\n    <button \r\n      class=\"add-btn\" \r\n      @click=\"openAddModal\"\r\n    >\r\n      Add Employee\r\n    </button>\r\n\r\n    <!-- Employee Card -->\r\n    <div v-for=\"employee in filteredEmployees\" :key=\"employee.employeeId\" class=\"employee-card\">\r\n      <!-- Edit the emp button -->\r\n      <button \r\n        class=\"edit-btn\" \r\n        @click=\"editEmployee(employee)\"\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <!-- Remove button -->\r\n      <button \r\n        class=\"remove-btn\" \r\n        @click=\"removeEmployee(employee.employeeId)\"\r\n      >\r\n        Remove\r\n      </button>\r\n\r\n      <!-- Employee info -->\r\n      <h5 class=\"employee-name\">{{ employee.name }}</h5>\r\n      <p class=\"employee-info\">ID: {{ employee.employeeId }}</p>\r\n      <p class=\"employee-info\">Position: {{ employee.position }}</p>\r\n      <p class=\"employee-info\">Department: {{ employee.department }}</p>\r\n      <p class=\"employee-info\">Salary: R{{ employee.salary }}</p>\r\n      <p class=\"employee-info\">History: {{ employee.employmentHistory }}</p>\r\n      <p class=\"employee-info\">Contact: {{ employee.contact }}</p>\r\n\r\n      <!-- Review button -->\r\n      <button \r\n        class=\"review-btn\" \r\n        @click=\"openReviewModal(employee)\"\r\n      >\r\n        Review\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Add modal -->\r\n    <div v-if=\"isAdding\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <h3>Add New Employee</h3>\r\n        <label for=\"addName\">Name:</label>\r\n        <input v-model=\"newEmployee.name\" id=\"addName\" />\r\n\r\n        <label for=\"addPosition\">Position:</label>\r\n        <input v-model=\"newEmployee.position\" id=\"addPosition\" />\r\n\r\n        <label for=\"addDepartment\">Department:</label>\r\n        <input v-model=\"newEmployee.department\" id=\"addDepartment\" />\r\n\r\n        <label for=\"addSalary\">Salary:</label>\r\n        <input v-model=\"newEmployee.salary\" id=\"addSalary\" />\r\n\r\n        <label for=\"addHistory\">History:</label>\r\n        <input v-model=\"newEmployee.employmentHistory\" id=\"addHistory\" />\r\n\r\n        <label for=\"addContact\">Contact:</label>\r\n        <input v-model=\"newEmployee.contact\" id=\"addContact\" />\r\n\r\n        <button @click=\"addEmployee\">Add Employee</button>\r\n        <button @click=\"closeModal\">Cancel</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Review Modal -->\r\n    <div v-if=\"isReviewing\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <h3>Review Employee</h3>\r\n        <p><strong>Name:</strong> {{ selectedEmployee.name }}</p>\r\n        <label for=\"reviewText\">Write a Review:</label>\r\n        <textarea \r\n          id=\"reviewText\" \r\n          v-model=\"reviewText\" \r\n          rows=\"5\"\r\n          placeholder=\"Enter your review here...\"\r\n        ></textarea>\r\n        <button @click=\"submitReview\">Submit</button>\r\n        <button @click=\"closeModal\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: \"\",\r\n      employeeDataRecieved: [],\r\n      isAdding: false,\r\n      isEditing: false,\r\n      isReviewing: false,\r\n      editableEmployee: {},\r\n      selectedEmployee: {},\r\n      reviewText: \"\",\r\n      newEmployee: {\r\n        employeeId: null,\r\n        name: \"\",\r\n        position: \"\",\r\n        department: \"\",\r\n        salary: \"\",\r\n        employmentHistory: \"\",\r\n        contact: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      return this.employeeDataRecieved.filter(employee =>\r\n        employee.name.toLowerCase().includes(query) ||\r\n        employee.department.toLowerCase().includes(query)\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    cloneData() {\r\n      this.employeeDataRecieved = this.$store.state.employeeInformation;\r\n    },\r\n    openAddModal() {\r\n      this.isAdding = true;\r\n    },\r\n    addEmployee() {\r\n      if (this.newEmployee.name && this.newEmployee.department) {\r\n        const newEmployee = {\r\n          ...this.newEmployee,\r\n          employeeId: Date.now(),\r\n        };\r\n        this.employeeDataRecieved.push(newEmployee);\r\n        this.closeModal();\r\n        this.resetNewEmployee();\r\n      } else {\r\n        alert(\"Please fill in all required fields.\");\r\n      }\r\n    },\r\n    resetNewEmployee() {\r\n      this.newEmployee = {\r\n        employeeId: null,\r\n        name: \"\",\r\n        position: \"\",\r\n        department: \"\",\r\n        salary: \"\",\r\n        employmentHistory: \"\",\r\n        contact: \"\",\r\n      };\r\n    },\r\n    editEmployee(employee) {\r\n      this.editableEmployee = { ...employee };\r\n      this.isEditing = true;\r\n    },\r\n    removeEmployee(employeeId) {\r\n      this.employeeDataRecieved = this.employeeDataRecieved.filter(\r\n        employee => employee.employeeId !== employeeId\r\n      );\r\n    },\r\n    openReviewModal(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.reviewText = \"\";\r\n      this.isReviewing = true;\r\n    },\r\n    submitReview() {\r\n      if (this.reviewText.trim()) {\r\n        alert(`Review submitted for ${this.selectedEmployee.name}: ${this.reviewText}`);\r\n        this.closeModal();\r\n      } else {\r\n        alert(\"Please write a review before submitting.\");\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.isAdding = false;\r\n      this.isEditing = false;\r\n      this.isReviewing = false;\r\n      this.resetNewEmployee();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.cloneData();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.employee-dashboard {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.search-bar {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.employee-card {\r\n  position: relative;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.employee-name {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.employee-info {\r\n  font-size: 14px;\r\n  margin: 3px 0;\r\n}\r\n\r\n/* Edit Button Styles */\r\n.edit-btn {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 110px;\r\n  background-color: rgb(245, 245, 0);\r\n  border: none;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border-radius: 4px;\r\n}\r\n\r\n.edit-btn:hover {\r\n  background-color: #f0e000;\r\n}\r\n\r\n/* Remove Button Styles */\r\n.remove-btn {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: rgb(255, 69, 0);\r\n  border: none;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border-radius: 4px;\r\n  color: white;\r\n\r\n}\r\n\r\n.remove-btn:hover {\r\n  background-color: #ff4500;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  width: 300px;\r\n}\r\n\r\n.modal-content input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.modal-content button {\r\n  padding: 10px 15px;\r\n  margin-top: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n}\r\n\r\n.modal-content button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Add Employee Button */\r\n.add-btn {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-btn:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n/* review button */\r\n\r\n.review-btn {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.review-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Add textarea styling in modal */\r\ntextarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n\r\n\r\n/* Laptop (1024px) */\r\n@media (max-width: 1024px) {\r\n  .container {\r\n    width: 90%;\r\n    padding: 15px;\r\n  }\r\n\r\n  body {\r\n    font-size: 15px;\r\n  }\r\n}\r\n\r\n/* Tablet (768px) */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    width: 95%;\r\n    padding: 10px;\r\n  }\r\n\r\n  body {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .header {\r\n    font-size: 18px;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n/* Mobile L (425px) */\r\n@media (max-width: 425px) {\r\n  .container {\r\n    width: 100%;\r\n    padding: 5px;\r\n  }\r\n\r\n  body {\r\n    font-size: 13px;\r\n  }\r\n\r\n  .header {\r\n    font-size: 16px;\r\n  }\r\n\r\n  .button {\r\n    width: 100%;\r\n    font-size: 14px;\r\n    padding: 10px;\r\n  }\r\n}\r\n\r\n/* Mobile M (375px) */\r\n@media (max-width: 375px) {\r\n  body {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .header {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .button {\r\n    font-size: 13px;\r\n    padding: 8px;\r\n  }\r\n}\r\n\r\n/* Mobile S (320px) */\r\n@media (max-width: 320px) {\r\n  body {\r\n    font-size: 11px;\r\n  }\r\n\r\n  .header {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .button {\r\n    font-size: 12px;\r\n    padding: 6px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}