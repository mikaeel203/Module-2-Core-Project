{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-striped\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"header-container\"\n  }, [_createElementVNode(\"h2\", null, \"History of Leave Requests\")], -1 /* HOISTED */)), _createCommentVNode(\" Search Bar \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    class: \"form-control mb-4\",\n    placeholder: \"Search by Name, Date, or Reason...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"table\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    scope: \"col\"\n  }, \"Name\"), _createElementVNode(\"th\", {\n    scope: \"col\"\n  }, \"Date\"), _createElementVNode(\"th\", {\n    scope: \"col\"\n  }, \"Reason\"), _createElementVNode(\"th\", {\n    scope: \"col\"\n  }, \"Decision\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredLeaveRequests, leaveRequest => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: leaveRequest.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(leaveRequest.employeeName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(leaveRequest.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(leaveRequest.reason), 1 /* TEXT */), _createElementVNode(\"td\", {\n      class: _normalizeClass(leaveRequest.status.toLowerCase())\n    }, _toDisplayString(leaveRequest.status), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_createCommentVNode","type","_cache","$event","$data","searchQuery","placeholder","_hoisted_1","scope","_Fragment","_renderList","$options","filteredLeaveRequests","leaveRequest","key","id","_toDisplayString","employeeName","date","reason","_normalizeClass","status","toLowerCase"],"sources":["C:\\Users\\Students\\Desktop\\clone\\front-end\\Module-2-Core-Project\\Frontend\\src\\components\\historyLeaveReqComp.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"header-container\">\r\n      <h2>History of Leave Requests</h2>\r\n    </div>\r\n\r\n    <!-- Search Bar -->\r\n    <input\r\n      type=\"text\"\r\n      v-model=\"searchQuery\"\r\n      class=\"form-control mb-4\"\r\n      placeholder=\"Search by Name, Date, or Reason...\"\r\n    />\r\n\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Date</th>\r\n          <th scope=\"col\">Reason</th>\r\n          <th scope=\"col\">Decision</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr v-for=\"leaveRequest in filteredLeaveRequests\" :key=\"leaveRequest.id\">\r\n          <td>{{ leaveRequest.employeeName }}</td>\r\n          <td>{{ leaveRequest.date }}</td>\r\n          <td>{{ leaveRequest.reason }}</td>\r\n          <td :class=\"leaveRequest.status.toLowerCase()\">{{ leaveRequest.status }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['employees'],\r\n  data() {\r\n    return {\r\n      searchQuery: '', // Search query for filtering leave requests\r\n    };\r\n  },\r\n  computed: {\r\n    // Flattening and filter leave requests based on the search query\r\n    filteredLeaveRequests() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      const allLeaveRequests = this.employees.flatMap(employee =>\r\n        employee.leaveRequests\r\n          .filter(\r\n            leaveRequest =>\r\n              leaveRequest.status === 'Approved' || leaveRequest.status === 'Denied'\r\n          )\r\n          .map(leaveRequest => ({\r\n            id: `${employee.id}-${leaveRequest.date}`,\r\n            employeeName: employee.name,\r\n            date: leaveRequest.date,\r\n            reason: leaveRequest.reason,\r\n            status: leaveRequest.status,\r\n          }))\r\n      );\r\n\r\n      // Filter based on the search query\r\n      return allLeaveRequests.filter(\r\n        leaveRequest =>\r\n          leaveRequest.employeeName.toLowerCase().includes(query) ||\r\n          leaveRequest.date.toLowerCase().includes(query) ||\r\n          leaveRequest.reason.toLowerCase().includes(query)\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* General layout */\r\nh1 {\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  font-weight: bold;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.table-striped tbody tr:nth-of-type(odd) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  padding: 12px 15px;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n  color: #555;\r\n}\r\n\r\n.table th {\r\n  background-color: #f1f1f1;\r\n  font-weight: bold;\r\n  color: #333;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.table td {\r\n  background-color: #fff;\r\n  font-size: 1rem;\r\n}\r\n\r\n/* Decision status color */\r\ntd.approved {\r\n  color: #28a745; /* Green for approved */\r\n  font-weight: bold;\r\n}\r\n\r\ntd.denied {\r\n  color: #dc3545; /* Red for denied */\r\n  font-weight: bold;\r\n}\r\n.header-container {\r\n  text-align: center; /* Center the content horizontally */\r\n  margin-bottom: 20px; /* Add spacing below the header */\r\n}\r\n\r\nh2 {\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: 2rem; /* Adjust the font size */\r\n  color: #333; /* Change color if needed */\r\n  font-weight: bold;\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 768px) {\r\n  h1 {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .table th,\r\n  .table td {\r\n    font-size: 0.9rem;\r\n    padding: 8px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;EAcWA,KAAK,EAAC;AAAqB;;uBAbpCC,mBAAA,CAgCM,c,0BA/BJC,mBAAA,CAEM;IAFDF,KAAK,EAAC;EAAkB,IAC3BE,mBAAA,CAAkC,YAA9B,2BAAyB,E,sBAG/BC,mBAAA,gBAAmB,E,gBACnBD,mBAAA,CAKE;IAJAE,IAAI,EAAC,MAAM;IARjB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASeC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBN,KAAK,EAAC,mBAAmB;IACzBS,WAAW,EAAC;iDAFHF,KAAA,CAAAC,WAAW,E,GAKtBN,mBAAA,CAkBQ,SAlBRQ,UAkBQ,G,0BAjBNR,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAyB;IAArBS,KAAK,EAAC;EAAK,GAAC,MAAI,GACpBT,mBAAA,CAAyB;IAArBS,KAAK,EAAC;EAAK,GAAC,MAAI,GACpBT,mBAAA,CAA2B;IAAvBS,KAAK,EAAC;EAAK,GAAC,QAAM,GACtBT,mBAAA,CAA6B;IAAzBS,KAAK,EAAC;EAAK,GAAC,UAAQ,E,wBAI5BT,mBAAA,CAOQ,iB,kBANND,mBAAA,CAKKW,SAAA,QA9BbC,WAAA,CAyBmCC,QAAA,CAAAC,qBAAqB,EAArCC,YAAY;yBAAvBf,mBAAA,CAKK;MAL8CgB,GAAG,EAAED,YAAY,CAACE;QACnEhB,mBAAA,CAAwC,YAAAiB,gBAAA,CAAjCH,YAAY,CAACI,YAAY,kBAChClB,mBAAA,CAAgC,YAAAiB,gBAAA,CAAzBH,YAAY,CAACK,IAAI,kBACxBnB,mBAAA,CAAkC,YAAAiB,gBAAA,CAA3BH,YAAY,CAACM,MAAM,kBAC1BpB,mBAAA,CAA6E;MAAxEF,KAAK,EA7BpBuB,eAAA,CA6BsBP,YAAY,CAACQ,MAAM,CAACC,WAAW;wBAAOT,YAAY,CAACQ,MAAM,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}